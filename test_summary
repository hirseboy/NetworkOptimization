============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.3.5, pluggy-1.5.0 -- /home/stuti/vicus-cloud/graph-optimization/venv/bin/python3
cachedir: .pytest_cache
rootdir: /home/stuti/vicus-cloud/graph-optimization
collecting ... collected 1 item

tests/test_optimal_solver.py::test_solvers_on_files Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/stuti/vicus-cloud/graph-optimization/venv/lib/python3.12/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/bfc9df8b17864fc8996b46a6a84ee96b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/bfc9df8b17864fc8996b46a6a84ee96b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 23 COLUMNS
At line 159 RHS
At line 178 BOUNDS
At line 224 ENDATA
Problem MODEL has 18 rows, 45 columns and 90 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Presolve 18 (0) rows, 45 (0) columns and 90 (0) elements
0  Obj 0 Primal inf 12.216367 (15)
15  Obj 6309268
Optimal - objective value 6309268
Optimal objective 6309268 - 15 iterations time 0.002
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/stuti/vicus-cloud/graph-optimization/venv/lib/python3.12/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/ea5b361fbcae489b994a9fa330377ca9-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ea5b361fbcae489b994a9fa330377ca9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 23 COLUMNS
At line 159 RHS
At line 178 BOUNDS
At line 224 ENDATA
Problem MODEL has 18 rows, 45 columns and 90 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Presolve 18 (0) rows, 45 (0) columns and 90 (0) elements
0  Obj 0 Primal inf 12.216367 (15)
15  Obj 6309268
Optimal - objective value 6309268
Optimal objective 6309268 - 15 iterations time 0.002
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/stuti/vicus-cloud/graph-optimization/venv/lib/python3.12/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/9783fb7e7cde4a23afa484ee7d682b5e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9783fb7e7cde4a23afa484ee7d682b5e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 23 COLUMNS
At line 159 RHS
At line 178 BOUNDS
At line 224 ENDATA
Problem MODEL has 18 rows, 45 columns and 90 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Presolve 18 (0) rows, 45 (0) columns and 90 (0) elements
0  Obj 0 Primal inf 12.216367 (15)
15  Obj 6309268
Optimal - objective value 6309268
Optimal objective 6309268 - 15 iterations time 0.002
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/stuti/vicus-cloud/graph-optimization/venv/lib/python3.12/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/63df317bf0024932b2d3e9e24db317f8-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/63df317bf0024932b2d3e9e24db317f8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 23 COLUMNS
At line 159 RHS
At line 178 BOUNDS
At line 224 ENDATA
Problem MODEL has 18 rows, 45 columns and 90 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Presolve 18 (0) rows, 45 (0) columns and 90 (0) elements
0  Obj 0 Primal inf 12.216367 (15)
15  Obj 6309268
Optimal - objective value 6309268
Optimal objective 6309268 - 15 iterations time 0.002
Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Running solver tests...

Testing CBC on enough_supply_for_all_nodes.vicus...
data/test_scenarios/enough_supply_for_all_nodes.vicus
Graph created 39 38
Consumer demand:  {'5': 5000.0, '6': 8000.0, '7': 5000.0, '8': 5000.0, '9': 5000.0, '10': 5000.0, '11': 5000.0, '12': 5000.0, '13': 7000.0, '14': 20000.0, '15': 10000.0, '110': 10000.0, '183': 5000.0, '219': 5000.0, '220': 5000.0}
Source capacity: {'75': 100000.0, '76': 100000.0, '77': 100000.0}
Total Consumer demand: 105000.0 
Total Source capacity: 300000.0


Assignments:
75 supplies 5000.0 to 9 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 10 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 11 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 12 (100.0%) consumer=5000.0, source=100000.0
75 supplies 7000.0 to 13 (100.0%) consumer=7000.0, source=100000.0
75 supplies 20000.0 to 14 (100.0%) consumer=20000.0, source=100000.0
75 supplies 10000.0 to 110 (100.0%) consumer=10000.0, source=100000.0
75 supplies 5000.0 to 183 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 219 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 220 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 7 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 8 (100.0%) consumer=5000.0, source=100000.0
77 supplies 5000.0 to 5 (100.0%) consumer=5000.0, source=100000.0
77 supplies 8000.0 to 6 (100.0%) consumer=8000.0, source=100000.0
77 supplies 10000.0 to 15 (100.0%) consumer=10000.0, source=100000.0

Total cost: 6309268.0
Status: Optimal
Testing GLPK on enough_supply_for_all_nodes.vicus...
data/test_scenarios/enough_supply_for_all_nodes.vicus
Graph created 39 38
Consumer demand:  {'5': 5000.0, '6': 8000.0, '7': 5000.0, '8': 5000.0, '9': 5000.0, '10': 5000.0, '11': 5000.0, '12': 5000.0, '13': 7000.0, '14': 20000.0, '15': 10000.0, '110': 10000.0, '183': 5000.0, '219': 5000.0, '220': 5000.0}
Source capacity: {'75': 100000.0, '76': 100000.0, '77': 100000.0}
Total Consumer demand: 105000.0 
Total Source capacity: 300000.0


Assignments:
75 supplies 5000.0 to 9 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 10 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 11 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 12 (100.0%) consumer=5000.0, source=100000.0
75 supplies 7000.0 to 13 (100.0%) consumer=7000.0, source=100000.0
75 supplies 20000.0 to 14 (100.0%) consumer=20000.0, source=100000.0
75 supplies 10000.0 to 110 (100.0%) consumer=10000.0, source=100000.0
75 supplies 5000.0 to 183 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 219 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 220 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 7 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 8 (100.0%) consumer=5000.0, source=100000.0
77 supplies 5000.0 to 5 (100.0%) consumer=5000.0, source=100000.0
77 supplies 8000.0 to 6 (100.0%) consumer=8000.0, source=100000.0
77 supplies 10000.0 to 15 (100.0%) consumer=10000.0, source=100000.0

Total cost: 6309268.0
Status: Optimal
Testing GUROBI on enough_supply_for_all_nodes.vicus...
data/test_scenarios/enough_supply_for_all_nodes.vicus
Graph created 39 38
Consumer demand:  {'5': 5000.0, '6': 8000.0, '7': 5000.0, '8': 5000.0, '9': 5000.0, '10': 5000.0, '11': 5000.0, '12': 5000.0, '13': 7000.0, '14': 20000.0, '15': 10000.0, '110': 10000.0, '183': 5000.0, '219': 5000.0, '220': 5000.0}
Source capacity: {'75': 100000.0, '76': 100000.0, '77': 100000.0}
Total Consumer demand: 105000.0 
Total Source capacity: 300000.0


Assignments:
75 supplies 5000.0 to 9 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 10 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 11 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 12 (100.0%) consumer=5000.0, source=100000.0
75 supplies 7000.0 to 13 (100.0%) consumer=7000.0, source=100000.0
75 supplies 20000.0 to 14 (100.0%) consumer=20000.0, source=100000.0
75 supplies 10000.0 to 110 (100.0%) consumer=10000.0, source=100000.0
75 supplies 5000.0 to 183 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 219 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 220 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 7 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 8 (100.0%) consumer=5000.0, source=100000.0
77 supplies 5000.0 to 5 (100.0%) consumer=5000.0, source=100000.0
77 supplies 8000.0 to 6 (100.0%) consumer=8000.0, source=100000.0
77 supplies 10000.0 to 15 (100.0%) consumer=10000.0, source=100000.0

Total cost: 6309268.0
Status: Optimal
Testing CPLEX on enough_supply_for_all_nodes.vicus...
data/test_scenarios/enough_supply_for_all_nodes.vicus
Graph created 39 38
Consumer demand:  {'5': 5000.0, '6': 8000.0, '7': 5000.0, '8': 5000.0, '9': 5000.0, '10': 5000.0, '11': 5000.0, '12': 5000.0, '13': 7000.0, '14': 20000.0, '15': 10000.0, '110': 10000.0, '183': 5000.0, '219': 5000.0, '220': 5000.0}
Source capacity: {'75': 100000.0, '76': 100000.0, '77': 100000.0}
Total Consumer demand: 105000.0 
Total Source capacity: 300000.0


Assignments:
75 supplies 5000.0 to 9 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 10 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 11 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 12 (100.0%) consumer=5000.0, source=100000.0
75 supplies 7000.0 to 13 (100.0%) consumer=7000.0, source=100000.0
75 supplies 20000.0 to 14 (100.0%) consumer=20000.0, source=100000.0
75 supplies 10000.0 to 110 (100.0%) consumer=10000.0, source=100000.0
75 supplies 5000.0 to 183 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 219 (100.0%) consumer=5000.0, source=100000.0
75 supplies 5000.0 to 220 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 7 (100.0%) consumer=5000.0, source=100000.0
76 supplies 5000.0 to 8 (100.0%) consumer=5000.0, source=100000.0
77 supplies 5000.0 to 5 (100.0%) consumer=5000.0, source=100000.0
77 supplies 8000.0 to 6 (100.0%) consumer=8000.0, source=100000.0
77 supplies 10000.0 to 15 (100.0%) consumer=10000.0, source=100000.0

Total cost: 6309268.0
Status: Optimal

==== Test Summary ==== 4
PASSED

=============================== warnings summary ===============================
tests/test_optimal_solver.py::test_solvers_on_files
  /home/stuti/vicus-cloud/graph-optimization/venv/lib/python3.12/site-packages/_pytest/python.py:163: PytestReturnNotNoneWarning: Expected None, but tests/test_optimal_solver.py::test_solvers_on_files returned [None, None, None, None], which will be an error in a future version of pytest.  Did you mean to use `assert` instead of `return`?
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
========================= 1 passed, 1 warning in 0.30s =========================
